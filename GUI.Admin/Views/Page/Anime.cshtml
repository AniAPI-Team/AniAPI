@section Styles {
    <style>
        #anime-template {
            display: none !important;
        }

        .anime-card .anime-cover .cover {
            height: 100%;
            width: 100%;
            background-repeat: no-repeat;
            background-position: center;
            background-size: cover;
        }

            .anime-card .anime-cover .cover:not(.lazy) {
                opacity: 1;
                transition: opacity .3s;
            }

        .anime-card a {
            text-decoration: none;
            color: inherit;
        }

        .anime-card a:hover {
            color: var(--bs-primary);
            transition: .2s;
        }

        .anime-card .anime-title {
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        .anime-card .anime-description {
            display: -webkit-box;
            min-height: 100px;
            max-height: 100px;
            overflow: hidden;
            font-size: 13px;
            text-overflow: ellipsis;
            -webkit-line-clamp: 5;
            -webkit-box-orient: vertical;
        }

        .anime-card .anime-tags span:not(:last-child) {
            margin-right: .5rem;
        }

        .tooltip-inner {
            max-width: 640px;
            text-align: justify;
        }

        @@media screen and (max-width: 768px) {
            .tooltip-inner {
                max-width: 320px;
            }
        }
    </style>
}

<div class="row">
    <div class="col-md-11 mb-4">
        <input type="text" class="form-control" id="search-text" placeholder="Search by title...">
    </div>
    <div class="col-md-1 mb-4 d-flex justify-content-center align-items-center" id="loader">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
</div>
<div class="row row-cols-1 row-cols-md-2 row-cols-lg-2 row-cols-xl-2 row-cols-xxl-3" id="anime-cards"></div>

<div class="col anime-card" id="anime-template">
    <div class="card mb-3">
        <div class="row g-0">
            <div class="col-md-4 anime-cover">
                <div class="cover"></div>
            </div>
            <div class="col-md-8">
                <div class="card-body">
                    <a href="#">
                        <h6 class="card-title anime-title"></h6>
                    </a>
                    <p class="card-text anime-description"></p>
                    <div class="anime-tags"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var _searchTimer;

        document.addEventListener('DOMContentLoaded', async () => {
            document.getElementById('search-text').addEventListener('keyup', onSearchKeyUp);

            await loadAnime();

            pageLoaded();
        });

        const onSearchKeyUp = () => {
            if (_searchTimer) {
                clearTimeout(_searchTimer);
            }

            _searchTimer = setTimeout(() => {
                document.getElementById('anime-cards').innerHTML = '';
                loadAnime();
            }, 1000);
        }

        const loadAnime = async () => {
            document.getElementById('loader').style.visibility = 'visible';

            const title = document.getElementById('search-text').value;

            const url = 'https://api.aniapi.com/v1/anime?sort_fields=score&sort_directions=-1' + (title === '' ? '' : '&title=' + encodeURIComponent(title));
            const req = await fetch(url);
            const res = await req.json();

            console.log(res);

            if (res.data) {
                const docs = res.data.documents;

                for (let i = 0; i < docs.length; i++) {
                    const template = document.getElementById('anime-template').cloneNode(true);
                    template.id = '';

                    template.querySelector('.anime-title').innerText = docs[i].titles.en;
                    template.querySelector('.anime-title').setAttribute('title', docs[i].titles.en);
                    new bootstrap.Tooltip(template.querySelector('.anime-title'), {
                        placement: 'left',
                    });

                    template.querySelector('.anime-description').innerHTML = docs[i].descriptions.en;
                    template.querySelector('.anime-description').setAttribute('title', docs[i].descriptions.en);
                    new bootstrap.Tooltip(template.querySelector('.anime-description'), {
                        html: true,
                        placement: 'bottom',
                        delay: {
                            show: 500,
                            hide: 0
                        }
                    });

                    const cover = template.querySelector('.anime-cover');
                    const img = cover.querySelector('.cover');

                    cover.style.backgroundColor = docs[i].cover_color;

                    img.classList.add('lazy');
                    img.style.backgroundImage = `url(${docs[i].cover_image})`;

                    observeImage(img);

                    for (let t = 0; t < 2; t++) {
                        if (docs[i].genres.length - 1 < t) {
                            break;
                        }

                        const genre = docs[i].genres[t];

                        const badge = document.createElement('span');
                        badge.className = 'badge rounded-pill bg-primary';
                        badge.innerText = genre;

                        template.querySelector('.anime-tags').appendChild(badge);
                    }

                    document.getElementById('anime-cards').appendChild(template);
                }
            }

            document.getElementById('loader').style.visibility = 'hidden';
        }
    </script>
}